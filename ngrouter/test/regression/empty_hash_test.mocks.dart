// Mocks generated by Mockito 5.4.3 from annotations
// in ngrouter/test/regression/empty_hash_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:html' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:ngrouter/src/location/platform_location.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PlatformLocation].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformLocation extends _i1.Mock implements _i2.PlatformLocation {
  MockPlatformLocation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get pathname => (super.noSuchMethod(
        Invocation.getter(#pathname),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#pathname),
        ),
      ) as String);

  @override
  String get search => (super.noSuchMethod(
        Invocation.getter(#search),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#search),
        ),
      ) as String);

  @override
  String get hash => (super.noSuchMethod(
        Invocation.getter(#hash),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#hash),
        ),
      ) as String);

  @override
  void onPopState(_i4.EventListener? fn) => super.noSuchMethod(
        Invocation.method(
          #onPopState,
          [fn],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onHashChange(_i4.EventListener? fn) => super.noSuchMethod(
        Invocation.method(
          #onHashChange,
          [fn],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void replaceState(
    Object? state,
    String? title,
    String? url,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #replaceState,
          [
            state,
            title,
            url,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pushState(
    Object? state,
    String? title,
    String? url,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #pushState,
          [
            state,
            title,
            url,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forward() => super.noSuchMethod(
        Invocation.method(
          #forward,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void back() => super.noSuchMethod(
        Invocation.method(
          #back,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
